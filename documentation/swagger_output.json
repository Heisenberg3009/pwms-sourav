{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    },
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
      "flow": "implicit",
      "scopes": {
        "read_pets": "read your pets",
        "write_pets": "modify pets in your account"
      }
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to display the users!",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Displaying all users!",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "Endpoint for the user to update!",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Enter User ID!"
          },
          {
            "name": "Name",
            "description": "Enter name if to be updated -",
            "type": "string",
            "in": "query"
          },
          {
            "name": "Age",
            "description": "Enter age if to be updated-",
            "type": "string",
            "in": "query"
          },
          {
            "name": "City",
            "description": "Enter city if to be updated -",
            "type": "string",
            "in": "query"
          },
          {
            "name": "Phone number",
            "description": "Enter phone number if to be updated -",
            "type": "string",
            "in": "query"
          },
          {
            "name": "Occupation",
            "description": "Enter occupation if to be updated -",
            "type": "string",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User"
            },
            "description": "User updated successfully!"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to create/put new users!",
        "parameters": [
          {
            "name": "id",
            "description": "Enter User ID!",
            "in": "query",
            "type": "string"
          },
          {
            "name": "Name",
            "description": "Enter your name",
            "in": "query",
            "type": "string"
          },
          {
            "name": "Age",
            "description": "Enter your age",
            "in": "query",
            "type": "string"
          },
          {
            "name": "City",
            "description": "Enter your city",
            "in": "query",
            "type": "string"
          },
          {
            "name": "Phone number",
            "description": "Enter your occupation",
            "in": "query",
            "type": "string"
          },
          {
            "name": "Email",
            "description": "Enter your occupation",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "User created succesfully!",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/warehouse/{id}": {
      "get": {
        "tags": [
          "Warehouse"
        ],
        "description": "Endpoint to get all warehouse spaces!",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Warehouse ID",
            "description": "Enter the Warehouse ID",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User"
            },
            "description": "Displaying all warehouse spaces!:"
          }
        }
      },
      "put": {
        "tags": [
          "Warehouse"
        ],
        "description": "Endpoint for the user to update warehouse space!",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Name",
            "description": "Enter location co-ordinates if to be updated-",
            "type": "string",
            "in": "query"
          }
        ],
        "responses": {}
      }
    },
    "/warehouse": {
      "post": {
        "tags": [
          "Warehouse"
        ],
        "description": "Endpoint to create/put new warehouse space!",
        "parameters": [
          {
            "name": "Name",
            "description": "Enter your name",
            "in": "query",
            "type": "string"
          },
          {
            "name": "Warehouse Name",
            "description": "Enter warehouse name",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Device created succesfully!",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/vehicle/{id}": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "description": "Endpoint to display all vehicles!",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "VehicleID",
            "description": "Enter the vehicle ID!",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Vehicle"
            },
            "description": "Displaying all vehicles!"
          }
        }
      },
      "put": {
        "tags": [
          "Vehicle"
        ],
        "description": "Endpoint for the user to update their vehicle information!",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Enter Vehicle ID!"
          },
          {
            "name": "Vehicle Name",
            "description": "Enter Vehicle Name if to be updated -",
            "type": "string",
            "in": "query"
          },
          {
            "name": "Vehicle Type",
            "description": "Enter vehicle type if to be updated -",
            "type": "string",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Vehicle"
            },
            "description": "Vehicle updated successfully!"
          }
        }
      }
    },
    "/vehicle": {
      "post": {
        "tags": [
          "Vehicle"
        ],
        "description": "Endpoint to create/put new vehicles!",
        "parameters": [
          {
            "name": "Name",
            "description": "Enter your name!",
            "in": "query",
            "type": "string"
          },
          {
            "name": "Vehicle Name",
            "description": "Enter your vehicle name!",
            "in": "query",
            "type": "string"
          },
          {
            "name": "Vehicle Type",
            "description": "Enter your vehicle type!",
            "in": "query",
            "type": "string"
          },
          {
            "name": "Registration Number",
            "description": "Enter your registration number!",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Vehicle created succesfully!",
            "schema": {
              "$ref": "#/definitions/Vehicle"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jhon Doe"
        },
        "age": {
          "type": "number",
          "example": 29
        },
        "parents": {
          "type": "object",
          "properties": {
            "father": {
              "type": "string",
              "example": "Simon Doe"
            },
            "mother": {
              "type": "string",
              "example": "Marie Doe"
            }
          }
        },
        "diplomas": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "school": {
                "type": "string",
                "example": "XYZ University"
              },
              "year": {
                "type": "number",
                "example": 2020
              },
              "completed": {
                "type": "boolean",
                "example": true
              },
              "internship": {
                "type": "object",
                "properties": {
                  "hours": {
                    "type": "number",
                    "example": 290
                  },
                  "location": {
                    "type": "string",
                    "example": "XYZ Company"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Vehicle": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "example": "Jhon Doe"
        },
        "VehicleType": {
          "type": "string",
          "example": "Car"
        },
        "VehicleName": {
          "type": "string",
          "example": "Mercedes"
        },
        "RegistrationNumber": {
          "type": "string",
          "example": "ABC1234"
        },
        "about": {
          "type": "string",
          "example": ""
        }
      }
    },
    "Device": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "example": "Jhon Doe"
        },
        "DeviceName": {
          "type": "string",
          "example": "Philips"
        },
        "DeviceType": {
          "type": "string",
          "example": "Light"
        },
        "DeviceID": {
          "type": "string",
          "example": "XYZ"
        },
        "about": {
          "type": "string",
          "example": ""
        }
      }
    },
    "AddUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jhon Doe"
        },
        "age": {
          "type": "number",
          "example": 29
        },
        "father": {
          "type": "string",
          "example": "Simon Doe"
        },
        "mother": {
          "type": "string",
          "example": "Marie Doe"
        },
        "about": {
          "type": "string",
          "example": ""
        }
      },
      "required": [
        "name",
        "age",
        "father",
        "mother"
      ]
    },
    "AddVehicle": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jhon Doe"
        },
        "vehicletype": {
          "type": "string",
          "example": "Car"
        },
        "vehiclename": {
          "type": "string",
          "example": "Mercedes"
        },
        "registrationnumber": {
          "type": "string",
          "example": "ABC1234"
        },
        "about": {
          "type": "string",
          "example": ""
        }
      },
      "required": [
        "name",
        "vehicletype",
        "vehiclename",
        "registrationnumber"
      ]
    },
    "AddDevice": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jhon Doe"
        },
        "devicename": {
          "type": "string",
          "example": "Philips"
        },
        "devicetype": {
          "type": "string",
          "example": "Light"
        },
        "deviceid": {
          "type": "string",
          "example": "XYZ"
        },
        "about": {
          "type": "string",
          "example": ""
        }
      },
      "required": [
        "name",
        "devicename",
        "devicetype",
        "deviceid"
      ]
    }
  }
}